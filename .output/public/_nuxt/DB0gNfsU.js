import{k,A as D,a3 as V,x as W,f as i,l as j,u as q}from"./CRyLGsn1.js";const w=i(!1),u=i(null),o=i(!1),C=i(0),E=i(null),c=i(null),v=i(!1),f=i(!1),O=(g={})=>{const{includeAuth:y=!0,retryAttempts:x=2,timeout:T=3e4}=g,{user:m}=k();let l=null;try{D()&&(l=V.useReCaptcha())}catch{console.warn("reCaptcha not available in current context")}const b=async()=>{try{if(!l){console.warn("reCaptcha instance not available");return}return await(l==null?void 0:l.recaptchaLoaded()),await(l==null?void 0:l.executeRecaptcha("wp"))}catch(e){console.error("Failed to get reCAPTCHA token:",e);return}},F=async()=>{if(!y||!m.value)return null;try{return await m.value.getIdToken()}catch(e){throw console.error("Failed to get Firebase auth token:",e),new Error("Authentication failed")}},$=e=>{f.value=e},I=(e,t)=>{const r=`/api/phone/${e}`,n=new URLSearchParams;t&&n.append("token",t);const d=n.toString();return d?`${r}?${d}`:r},A=async(e,t=1)=>{var r,n,d,p,a,R;try{const{$api:s}=q(),U={...await P(),"Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache","SW-Bypass":"true"};return(await Promise.race([s.get(e,{headers:U}),new Promise((G,B)=>setTimeout(()=>B(new Error("Request timeout")),T))])).data}catch(s){if(((r=s.response)==null?void 0:r.status)===429)throw o.value=!0,new Error("Rate limit exceeded. Please try again later.");if(((n=s.response)==null?void 0:n.status)===401)throw new Error("Authentication failed. Please log in again.");if(((d=s.response)==null?void 0:d.status)===403)throw window.location.href="/api/refresh",new Error("Access forbidden. Please refresh the page.");if(((p=s.response)==null?void 0:p.status)>=500&&t<x)return console.warn(`API request failed (attempt ${t}), retrying...`),await new Promise(L=>setTimeout(L,1e3*t)),A(e,t+1);throw(R=(a=s.response)==null?void 0:a.data)!=null&&R.message?new Error(s.response.data.message):s.message==="Request timeout"?new Error("Request timed out. Please try again."):new Error("Failed to fetch profile data. Please try again.")}},S=async e=>{if(u.value=null,o.value=!1,!e||e.trim().length===0)return u.value="Phone number is required",{data:null,loading:!1,error:u.value,rateLimited:!1};w.value=!0;try{const t=await b(),r=I(e,t),n=await A(r);return C.value=Date.now(),h(),{data:n,loading:!1,error:null,rateLimited:!1}}catch(t){return u.value=t.message||"An unexpected error occurred",console.error("Phone API error:",t),h(),{data:null,loading:!1,error:u.value,rateLimited:o.value}}finally{w.value=!1}},K=()=>{u.value=null,o.value=!1},H=W(()=>!y||!!m.value),M=()=>{if(!o.value)return 0;const t=Date.now()-C.value;return Math.max(0,3e3-t)},P=async()=>({Authorization:`Bearer ${await F()}`,"Content-Type":"application/json"}),h=async()=>{var e;v.value=!0;try{const{$api:t}=q(),{waitForLoadingFirebase:r}=k();await r();const n="/api/phone/limits",p={...await P(),"Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache","SW-Bypass":"true"},a=(await t.get(n,{headers:p})).data;return a.success&&a.limits&&(E.value=a.limits,a.apiKeyLimits?c.value=a.apiKeyLimits:c.value=null,f.value=a.hasApiKey||!1,f.value&&c.value&&c.value.requestRemaining!==void 0?o.value=c.value.requestRemaining<=0:f.value&&!c.value?o.value=!1:o.value=a.limits.remaining<=0),a}catch(t){if(console.error("Failed to fetch rate limit info:",t),((e=t.response)==null?void 0:e.status)===403)throw window.location.href="/api/refresh",new Error("Access forbidden. Please refresh the page.");return null}finally{v.value=!1}};return{loading:w,error:u,rateLimited:o,isAuthenticated:H,rateLimitInfo:E,rateLimitInfoApi:c,rateLimitLoading:v,hasApiKey:f,setApiKeyValue:$,searchProfile:S,clearError:K,getRateLimitTimeRemaining:M,fetchRateLimitInfo:h,startRateLimitMonitoring:(e=3e4)=>{h(),j(m,t=>{h()},{immediate:!0})},options:i(g)}};export{O as u};
