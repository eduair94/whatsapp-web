import{k as q,A as j,a3 as G,x as V,f as u,l as X,u as T}from"./IELR2iwA.js";const A=u(!1),f=u(null),n=u(!1),b=u(0),P=u(null),s=u(null),R=u(!1),d=u(!1),J=(L={})=>{const{includeAuth:C=!0,retryAttempts:x=2,timeout:F=3e4}=L,{user:p}=q();let h=null;try{j()&&(h=G.useReCaptcha())}catch{console.warn("reCaptcha not available in current context")}const K=async()=>{try{if(!h){console.warn("reCaptcha instance not available");return}return await(h==null?void 0:h.recaptchaLoaded()),await(h==null?void 0:h.executeRecaptcha("wp"))}catch(e){console.error("Failed to get reCAPTCHA token:",e);return}},S=async()=>{if(!C||!p.value)return null;try{return await p.value.getIdToken()}catch(e){throw console.error("Failed to get Firebase auth token:",e),new Error("Authentication failed")}},B=e=>{d.value=e},$=(e,a)=>{const t=`/api/phone/${e}`,o=new URLSearchParams;a&&o.append("token",a);const l=o.toString();return l?`${t}?${l}`:t},k=async(e,a=1)=>{var t,o,l,r,i,E;try{const{$api:c}=T(),g={...await v(),"Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache","SW-Bypass":"true"};return(await Promise.race([c.get(e,{headers:g}),new Promise((U,W)=>setTimeout(()=>W(new Error("Request timeout")),F))])).data}catch(c){if(((t=c.response)==null?void 0:t.status)===429)throw n.value=!0,new Error("Rate limit exceeded. Please try again later.");if(((o=c.response)==null?void 0:o.status)===401)throw new Error("Authentication failed. Please log in again.");if(((l=c.response)==null?void 0:l.status)===403)if(a===1){console.warn("403 error encountered, retrying with service worker bypass");try{const g={...await v(),"Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache","SW-Bypass":"true","X-Bypass-Cache":"true"},y=await fetch(e,{method:"GET",headers:g,cache:"no-store"});if(y.ok)return await y.json();throw window.location.href="/api/refresh",new Error("Access forbidden. Please refresh the page.")}catch(w){throw console.error("Direct fetch also failed:",w),window.location.href="/api/refresh",new Error("Access forbidden. Please refresh the page.")}}else throw window.location.href="/api/refresh",new Error("Access forbidden. Please refresh the page.");if(((r=c.response)==null?void 0:r.status)>=500&&a<x)return console.warn(`API request failed (attempt ${a}), retrying...`),await new Promise(w=>setTimeout(w,1e3*a)),k(e,a+1);throw(E=(i=c.response)==null?void 0:i.data)!=null&&E.message?new Error(c.response.data.message):c.message==="Request timeout"?new Error("Request timed out. Please try again."):new Error("Failed to fetch profile data. Please try again.")}},H=async e=>{if(f.value=null,n.value=!1,!e||e.trim().length===0)return f.value="Phone number is required",{data:null,loading:!1,error:f.value,rateLimited:!1};A.value=!0;try{const a=await K(),t=$(e,a),o=await k(t);return b.value=Date.now(),m(),{data:o,loading:!1,error:null,rateLimited:!1}}catch(a){return f.value=a.message||"An unexpected error occurred",console.error("Phone API error:",a),m(),{data:null,loading:!1,error:f.value,rateLimited:n.value}}finally{A.value=!1}},I=()=>{f.value=null,n.value=!1},D=V(()=>!C||!!p.value),M=()=>{if(!n.value)return 0;const a=Date.now()-b.value;return Math.max(0,3e3-a)},v=async()=>({Authorization:`Bearer ${await S()}`,"Content-Type":"application/json"}),m=async()=>{var e;R.value=!0;try{const{$api:a}=T(),{waitForLoadingFirebase:t}=q();await t();const o="/api/phone/limits",r={...await v(),"Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache","SW-Bypass":"true"},i=(await a.get(o,{headers:r})).data;return i.success&&i.limits&&(P.value=i.limits,i.apiKeyLimits?s.value=i.apiKeyLimits:s.value=null,d.value=i.hasApiKey||!1,d.value&&s.value&&s.value.requestRemaining!==void 0?n.value=s.value.requestRemaining<=0:d.value&&!s.value?n.value=!1:n.value=i.limits.remaining<=0),i}catch(a){if(console.error("Failed to fetch rate limit info:",a),((e=a.response)==null?void 0:e.status)===403)try{const o={...await v(),"Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache","SW-Bypass":"true","X-Bypass-Cache":"true"},l=await fetch("/api/phone/limits",{method:"GET",headers:o,cache:"no-store"});if(l.ok){const r=await l.json();return r.success&&r.limits&&(P.value=r.limits,r.apiKeyLimits?s.value=r.apiKeyLimits:s.value=null,d.value=r.hasApiKey||!1,d.value&&s.value&&s.value.requestRemaining!==void 0?n.value=s.value.requestRemaining<=0:d.value&&!s.value?n.value=!1:n.value=r.limits.remaining<=0),r}else window.location.href="/api/refresh"}catch(t){console.error("Direct fetch for rate limits also failed:",t),window.location.href="/api/refresh"}return null}finally{R.value=!1}};return{loading:A,error:f,rateLimited:n,isAuthenticated:D,rateLimitInfo:P,rateLimitInfoApi:s,rateLimitLoading:R,hasApiKey:d,setApiKeyValue:B,searchProfile:H,clearError:I,getRateLimitTimeRemaining:M,fetchRateLimitInfo:m,startRateLimitMonitoring:(e=3e4)=>{m(),X(p,a=>{m()},{immediate:!0})},options:u(L)}};export{J as u};
