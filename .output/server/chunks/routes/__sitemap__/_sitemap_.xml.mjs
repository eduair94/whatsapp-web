import{d as e,u as t,i as o,m as s,w as i,o as r,p,q as m,t as n}from"../../_/nitro.mjs";import"fs";import"os";import"path";import"url";import"http";import"https";import"events";import"zlib";import"@fastify/busboy";import"jsonwebtoken";import"node-forge";import"crypto";import"jwks-rsa";import"bcryptjs";import"mongoose";import"lru-cache";import"@unocss/core";import"@unocss/preset-wind3";import"devalue";import"consola";import"unhead";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"node:fs";import"node:url";import"unhead/server";import"unhead/plugins";import"unhead/utils";import"vue-bundle-renderer/runtime";import"vue/server-renderer";import"node:path";import"node:crypto";const a=e((async e=>{const a=t(e),{sitemaps:u}=a;let d=o(e,"sitemap");if(!d){const t=e.path.match(/(?:\/__sitemap__\/)?([^/]+)\.xml$/);t&&(d=t[1])}if(!d)return s({statusCode:400,message:"Invalid sitemap request"});d=i(r(d.replace(".xml","").replace("__sitemap__/","").replace(a.sitemapsPathPrefix||"","")));const c=p(d,u,a.defaultSitemapsChunkSize),h=void 0!==u.chunks&&!Number.isNaN(Number(d));if(!(d in u||c.baseSitemapName in u||h))return s({statusCode:404,message:`Sitemap "${d}" not found.`});if(c.isChunked&&void 0!==c.chunkIndex){const e=u[c.baseSitemapName];if(e&&!e.chunks&&!e._isChunking)return s({statusCode:404,message:`Sitemap "${c.baseSitemapName}" does not support chunking.`});if(void 0!==e?._chunkCount&&c.chunkIndex>=e._chunkCount)return s({statusCode:404,message:`Chunk ${c.chunkIndex} does not exist for sitemap "${c.baseSitemapName}".`})}const f=m(d,u,a.defaultSitemapsChunkSize);return n(e,f,a)}));export{a as default};
//# sourceMappingURL=_sitemap_.xml.mjs.map
