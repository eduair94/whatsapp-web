import{d as e,v as o,c as r,a as t,b as s,e as i}from"../../../_/nitro.mjs";import{g as p}from"../../../_/apiKeyService.mjs";import"fs";import"os";import"path";import"url";import"http";import"https";import"events";import"zlib";import"@fastify/busboy";import"jsonwebtoken";import"node-forge";import"crypto";import"jwks-rsa";import"bcryptjs";import"mongoose";import"lru-cache";import"@unocss/core";import"@unocss/preset-wind3";import"devalue";import"consola";import"unhead";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"node:fs";import"node:url";import"unhead/server";import"unhead/plugins";import"unhead/utils";import"vue-bundle-renderer/runtime";import"vue/server-renderer";import"node:path";import"node:crypto";const n=e((async e=>"OPTIONS"===e.method?new Response(null,{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization"}}):o(e,["GET"])?await m(e):r("Method not allowed",405))),m=t((async(e,o)=>{var t;try{const e=(null==(t=process.env.ADMIN_EMAILS)?void 0:t.split(","))||[];if(!e.includes(o.email||""))return r("Access denied. Admin privileges required.",403);const n=await p(),m=s(),a={nodeVersion:process.version,platform:process.platform,uptime:process.uptime(),memoryUsage:process.memoryUsage(),timestamp:(new Date).toISOString()};return i({apiKeys:n,database:m,system:a,user:{uid:o.uid,email:o.email,isAdmin:!0}})}catch(e){return console.error("‚ùå Error in handleGetStats:",e),r("Failed to retrieve statistics",500)}}));export{n as default};
//# sourceMappingURL=stats.mjs.map
