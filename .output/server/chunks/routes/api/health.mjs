import{d as e,f as t,b as o}from"../../_/nitro.mjs";import"fs";import"os";import"path";import"url";import"http";import"https";import"events";import"zlib";import"@fastify/busboy";import"jsonwebtoken";import"node-forge";import"crypto";import"jwks-rsa";import"bcryptjs";import"mongoose";import"lru-cache";import"@unocss/core";import"@unocss/preset-wind3";import"devalue";import"consola";import"unhead";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"node:fs";import"node:url";import"unhead/server";import"unhead/plugins";import"unhead/utils";import"vue-bundle-renderer/runtime";import"vue/server-renderer";import"node:path";import"node:crypto";const r=e((async e=>{if("OPTIONS"===e.method)return new Response(null,{status:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, OPTIONS","Access-Control-Allow-Headers":"Content-Type"}});try{await t();const e=o(),r={status:"healthy",timestamp:(new Date).toISOString(),services:{database:{status:e.isConnected?"connected":"disconnected",readyState:e.readyStateDescription},server:{status:"running",uptime:process.uptime(),nodeVersion:process.version}}};return new Response(JSON.stringify(r),{status:200,headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*"}})}catch(e){console.error("‚ùå Health check failed:",e);const t={status:"unhealthy",timestamp:(new Date).toISOString(),error:e instanceof Error?e.message:"Unknown error",services:{database:{status:"error"},server:{status:"running",uptime:process.uptime(),nodeVersion:process.version}}};return new Response(JSON.stringify(t),{status:503,headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*"}})}}));export{r as default};
//# sourceMappingURL=health.mjs.map
