import{aI as t,aJ as e,a5 as s,aK as r,aL as o,a8 as i,aM as a,a7 as n,H as p,ab as l,aN as c,aa as h,aO as d}from"./nitro.mjs";import{a as m,l as f}from"./eventHandlers.mjs";import{html as u}from"satori-html";import y from"image-size";import{createConsola as g}from"consola";import"fs";import"os";import"path";import"url";import"http";import"https";import"events";import"zlib";import"@fastify/busboy";import"jsonwebtoken";import"node-forge";import"crypto";import"jwks-rsa";import"bcryptjs";import"mongoose";import"lru-cache";import"@unocss/core";import"@unocss/preset-wind3";import"devalue";import"unhead";import"node:http";import"node:https";import"node:events";import"node:buffer";import"vue";import"node:fs";import"node:url";import"unhead/server";import"unhead/plugins";import"unhead/utils";import"vue-bundle-renderer/runtime";import"vue/server-renderer";import"node:path";import"node:crypto";const w={instance:void 0},v={instance:void 0},b={instance:void 0};async function useSatori(){return b.instance=b.instance||await import("./node2.mjs").then((t=>t.default)),await b.instance.initWasmPromise,b.instance.satori}function walkSatoriTree(t,e,s){const r=[];if(!e.props?.children||!Array.isArray(e.props.children))return r;if(0===e.props.children.length)return delete e.props.children,r;for(const o of e.props.children||[])if(o){for(const e of s.flat())e.filter(o)&&r.push(e.transform(o,t));r.push(...walkSatoriTree(t,o,s))}return r}const j=[{filter:t=>!!t.props?.class&&!t.props?.tw,transform(t){t.props.tw=t.props.class,t.props.tw=t.props.tw.replace(/icon|inline-style/g,"")}},{filter:t=>!!t.props?.style?.display,transform(t){["inline-block","inline"].includes(t.props.style.display)&&delete t.props.style.display}}];function isEmojiFilter(t){return"svg"===t.type&&void 0!==t.props?.["data-emoji"]}const k=[{filter:t=>["div","p"].includes(t.type)&&Array.isArray(t.props?.children)&&t.props.children.some(isEmojiFilter),transform:t=>{t.props.style=t.props.style||{},t.props.style.display="flex",t.props.style.alignItems="center",t.props.children=t.props.children.map((t=>"string"==typeof t?{type:"div",props:{children:t}}:(t.props.class?.includes("emoji")&&delete t.props.class,t)))}}],$=[{filter:t=>t.props?.["data-v-inspector"],transform:t=>{delete t.props["data-v-inspector"]}},{filter:t=>"string"==typeof t.props?.children,transform:e=>{e.props.children=t(e.props.children)}}],x=["div","p","ul","ol","li","blockquote","pre","hr","table","dl"],S=["span","a","b","i","u","em","strong","code","abbr","del","ins","mark","sub","sup","small","p","h1","h2","h3","h4","h5"],P={filter:t=>[...S,"div"].includes(t.type)&&Array.isArray(t.props?.children)&&t.props?.children.length>=1&&!t.props?.class?.includes("hidden"),transform:t=>{if(t.props.style=t.props.style||{},t.props.style?.display&&"flex"!==t.props.style?.display)return;if("div"===t.type&&(t.props.style.display="flex",!t.props?.class?.includes("flex-")&&t.props.children.some((t=>x.includes(t.type)))))return void(t.props.style.flexDirection="column");let e=t.props?.class?.includes("flex-wrap");t.props?.class?.includes("flex-")||(t.props.style.flexWrap="wrap",e=!0),e&&!t.props?.class?.includes("gap")&&(t.props.style.gap="0.2em")}},W=[{filter:t=>"img"===t.type&&t.props?.src,transform:async(i,{e:a,publicStoragePath:n,runtimeConfig:p})=>{let l=i.props.src;const c=l.startsWith("/");let h,d;if(l.endsWith(".webp")&&e.warn("Using WebP images with Satori is not supported. Please consider switching image format or use the chromium renderer.",l),c?(d||(d=await a.$fetch(l,{responseType:"arrayBuffer"}).catch((()=>{})),d||(d=await a.$fetch(l,{baseURL:s(a),responseType:"arrayBuffer"}).catch((()=>{})))),d&&(i.props.src=r(d))):l.startsWith("data:")||(l=t(l),i.props.src=l,d=await $fetch(l,{responseType:"arrayBuffer"}).catch((()=>{}))),d&&(!i.props.width||!i.props.height)){try{const t=y(d);h={width:t.width,height:t.height}}catch{}if(h?.width&&h?.height){const t=h.width/h.height;i.props.width&&!i.props.height?i.props.height=Math.round(i.props.width/t):i.props.height&&!i.props.width?i.props.width=Math.round(i.props.height*t):i.props.width||i.props.height||(i.props.width=h.width,i.props.height=h.height)}}"string"==typeof i.props.src&&i.props.src.startsWith("/")&&(i.props.src=d?r(d):`${o(l,`${s(a)}`)}?${Date.now()}`)}},{filter:t=>t.props?.style?.backgroundImage?.includes("url("),transform:async(t,{e:e,publicStoragePath:r,runtimeConfig:i})=>{const a=t.props.style.backgroundImage.replace(/^url\(['"]?/,"").replace(/['"]?\)$/,""),n=a?.startsWith("/");n&&(t.props.style.backgroundImage=`url(${o(a,`${s(e)}`)}?${Date.now()})`)}}],I=[{filter:t=>"span"===t.type&&t.props?.class?.includes("iconify"),transform:(t,e)=>{}},{filter:t=>"svg"===t.type&&t.props?.class?.includes("iconify"),transform:t=>{t.props.class=String(t.props.class).split(" ").filter((t=>!t.startsWith("iconify"))).join(" ")}}],T={filter:t=>!!t.props?.class,transform:async(t,e)=>{const s=t.props.class||"",r=t.props.style||{},o=new Set;for(const t of s.split(" ").filter((t=>t.trim()))){const s=await e.unocss.parseToken(t);if(s){const e=s[0][2].split(";").filter((t=>!!t?.trim())),i={"--color-gray-50":"249 250 251","--color-gray-100":"243 244 246","--color-gray-200":"229 231 235","--color-gray-300":"209 213 219","--color-gray-400":"156 163 175","--color-gray-500":"107 114 128","--color-gray-600":"75 85 99","--color-gray-700":"55 65 81","--color-gray-800":"31 41 55","--color-gray-900":"17 24 39","--color-gray-950":"3 7 18"};e.filter((t=>t.startsWith("--"))).forEach((t=>{const[e,s]=t.split(":");i[e]=s})),e.filter((t=>!t.startsWith("--"))).forEach((t=>{const[e,s]=t.split(":"),o=e.replace(/-([a-z])/g,((t,e)=>e.toUpperCase()));if(r[o]||(r[o]=s.replace(/var\((.*?)\)/g,((t,e)=>i[e.trim()]))),r[o]&&r[o].includes("/")){const[t,e]=r[o].split("/");"1)"===e.trim()?r[o]=t.replace(/(\d+) (\d+) (\d+).*/,((t,e,s,r)=>`${e}, ${s}, ${r})`)):r[o]=`${t.replace("rgb","rgba").replaceAll(" ",", ")}${e.trim()}`}})),o.add(t)}}t.props.class=s.split(" ").filter((t=>!o.has(t))).join(" "),t.props.tw=s.split(" ").filter((t=>!o.has(t))).join(" "),t.props.style=r}};async function applyInlineCss(t,e){const{e:s}=t;let r=e.html,o=e.head.style?.map((t=>t.innerHTML)).filter(Boolean).join("\n")||"";const i=e.head.link?.filter((e=>e.href.startsWith("/_nuxt/components")&&e.href.replaceAll("/","").includes(t.options.component)))||[];if(!i.length)return!1;if(!o.trim().length)return!1;const a=await async function(){return w.instance=w.instance||await import("./empty.mjs").then((t=>t.default)),await w.instance.initWasmPromise,w.instance.cssInline}();if(!a||a?.__mock__){if(i.length){g().withTag("Nuxt OG Image").warn("To have inline styles applied you need to install either the `@css-inline/css-inline` or `@css-inline/css-inline-wasm` package.")}return!1}r=a.inline(e.html,{loadRemoteStylesheets:!1,extraCss:o});const n=o.match(/\.([\w-]+)/g)?.map((t=>t.replace(".","")));return n&&(r=r.replace(new RegExp(`class="(${n.join("|")})"`,"g"),"")),e.html=r,!0}async function createVNodes(t){let e=t.options.html;if(!e){const s=await i(t.e,t.options.component,void 0!==t.options.props?t.options.props:t.options);s.html=a(s.html),await applyInlineCss(t,s),await m(t,s),e=s.html,e?.includes("<body>")&&(e=e.match(/<body>([\s\S]*)<\/body>/)?.[1]||"")}const s=`<div style="position: relative; display: flex; margin: 0 auto; width: ${t.options.width}px; height: ${t.options.height}px; overflow: hidden;">${e}</div>`,r=u(s);return walkSatoriTree(t,r,[k,j,P,$,I]),await Promise.all(walkSatoriTree(t,r,[T,W])),r}const A={};async function resolveFonts(t){const{fonts:e}=n(),s=h([...t.options.fonts||[],...e]),r=[],o=[];if(d)for(const e of s)await d.hasItem(e.cacheKey)?(e.data=await d.getItemRaw(e.cacheKey),o.push(e)):(A[e.cacheKey]||(A[e.cacheKey]=f(t,e).then((async t=>(t?.data&&await(d?.setItemRaw(t.cacheKey,t.data)),t)))),r.push(A[e.cacheKey]));const i=await Promise.all(r);return[...o,...i].map((t=>({name:t.name,data:t.data,style:t.style,weight:Number(t.weight)})))}async function createSvg(t){const{options:e}=t,{satoriOptions:s}=n(),[r,o,i]=await Promise.all([useSatori(),createVNodes(t),resolveFonts(t)]);await t._nitro.hooks.callHook("nuxt-og-image:satori:vnodes",o,t);return r(o,p(e.satori,s,{fonts:i,tailwindConfig:{theme:l},embedFont:!0,width:e.width,height:e.height})).catch((e=>c(t.e,e,!1)))}async function createPng(t){const{resvgOptions:e}=n(),s=await createSvg(t);return new(await async function(){return v.instance=v.instance||await import("./node.mjs").then((t=>t.default)),await v.instance.initWasmPromise,v.instance.Resvg}())(s,p(t.options.resvg,e)).render().asPng()}const C={name:"satori",supportedFormats:["png","jpeg","jpg","json"],async createImage(t){switch(t.extension){case"png":return createPng(t);case"jpeg":case"jpg":return async function(t){const{sharpOptions:e}=n();return console.error("Sharp dependency is not accessible. Please check you have it installed and are using a compatible runtime. Falling back to png."),createPng(t)}(t)}},async debug(t){const[e,s]=await Promise.all([createVNodes(t),createSvg(t)]);return{vnodes:e,svg:s}}};export{createSvg,C as default};
//# sourceMappingURL=renderer.mjs.map
